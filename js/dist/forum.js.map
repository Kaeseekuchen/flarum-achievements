{"version":3,"sources":["webpack://@malago/flarum-achievements/webpack/bootstrap","webpack://@malago/flarum-achievements/external \"flarum.core.compat['Model']\"","webpack://@malago/flarum-achievements/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@malago/flarum-achievements/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/Button']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['models/User']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/Modal']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['utils/ItemList']\"","webpack://@malago/flarum-achievements/./src/common/models/Achievement.js","webpack://@malago/flarum-achievements/./src/common/models/AchievementUser.js","webpack://@malago/flarum-achievements/./src/common/registerModels.js","webpack://@malago/flarum-achievements/external \"flarum.core.compat['extend']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['utils/mixin']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['app']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/CommentPost']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['common/Application']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/Page']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/Post']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/PostUser']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/ModalManager']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/TextEditor']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/PostEdited']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/IndexPage']\"","webpack://@malago/flarum-achievements/./src/forum/modals/NewAchievementModal.js","webpack://@malago/flarum-achievements/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","_extends","assign","target","arguments","length","source","apply","this","Achievement","Model","id","attribute","description","computation","points","rectangle","image","new","active","AchievementUser","registerModels","User","achievements","hasMany","achievement_user","app","store","models","achievement_id","user_id","NewAchievementModal","title","translator","trans","oninit","vnode","fields","items","ItemList","attrs","split","style","add","className","class","Button","component","type","onclick","hide","footer","content","loading","LoadingIndicator","toArray","Modal","require","initializers","extend","CommentPost","x","html","post","data","attributes","isHidden","forEach","item","index","$","element","append","tooltip","Application","promise","then","undefined","new_achievements","modal","show","Page","session","user","setTimeout","only_new_achievements","push","save"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","module.exports = flarum.core.compat['Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['utils/ItemList'];","/*\n *  Achievements Extension for Flarum\n *  Author: Miguel A. Lago\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\n\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Achievement extends Model {}\n \nObject.assign(Achievement.prototype, {\n  id: Model.attribute(\"id\"),\n  name: Model.attribute(\"name\"),\n  description: Model.attribute('description'),\n  computation: Model.attribute('computation'),\n  points: Model.attribute('points'),\n  rectangle: Model.attribute('rectangle'),\n  image: Model.attribute('image'),\n  new: Model.attribute('new'),\n  active: Model.attribute('active')\n});","/*\n *  Achievements Extension for Flarum\n *  Author: Miguel A. Lago\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\n\nimport Model from 'flarum/Model';\n\nexport default class AchievementUser extends Model {}\n\nObject.assign(AchievementUser.prototype, {\n  achievement_id: Model.attribute(\"achievement_id\"),\n  user_id: Model.attribute('user_id'),\n  new: Model.attribute('new')\n});","/*\n *  Achievements Extension for Flarum\n *  Author: Miguel A. Lago\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\n\nimport Model from \"flarum/Model\";\nimport User from \"flarum/models/User\";\nimport Achievement from \"./models/Achievement\";\nimport AchievementUser from \"./models/AchievementUser\";\n\nexport default function registerModels() {\n  User.prototype.achievements = Model.hasMany('achievements','achievement_user');\n  User.prototype.achievement_user = Model.hasMany('achievement_user');\n\n  app.store.models.achievements = Achievement;\n  app.store.models.achievement_user = AchievementUser;\n}","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['common/Application'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['components/PostUser'];","module.exports = flarum.core.compat['components/ModalManager'];","module.exports = flarum.core.compat['components/TextEditor'];","module.exports = flarum.core.compat['components/PostEdited'];","module.exports = flarum.core.compat['components/IndexPage'];","/*\n *  Achievements Extension for Flarum\n *  Author: Miguel A. Lago\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\n\nimport app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport ItemList from \"flarum/utils/ItemList\";\nimport Button from \"flarum/components/Button\";\n\nexport default class NewAchievementModal extends Modal {\n\n\n    title() {\n        return app.translator.trans('malago-achievements.forum.new_achievement_title');\n    }\n\n    oninit(vnode) {\n        super.oninit(vnode);\n    }\n\n    fields() {\n        const items = new ItemList();\n        for(var i=0;i<this.attrs.achievements.length;i++){\n            var rectangle = this.attrs.achievements[i].rectangle.split(',');\n\n            var style=\"background:url(\"+this.attrs.achievements[i].image+\");\\\n                background-position:-\"+rectangle[0]+\"px -\"+rectangle[1]+\"px;\\\n                height:\"+rectangle[2]+\"px;\\\n                width:\"+rectangle[3]+\"px;\";\n            \n            items.add(\n                \"image\"+i,\n                <div className=\"Form-group\">\n                    <span class='Badge Achievement' style={style}></span>\n                </div>,\n                -10\n            );\n    \n            items.add(\n                \"name\"+i,\n                <div className=\"Form-group\">\n                    <h1>{this.attrs.achievements[i].name}</h1>\n                </div>,\n                -10\n            );\n    \n            items.add(\n                \"description\"+i,\n                <div className=\"Form-group\">\n                    <h3>{this.attrs.achievements[i].description}</h3>\n                </div>,\n                -10\n            );\n        }\n\n        items.add(\n            \"close\",\n            <div className=\"NewAchievementModal--Button\">\n                {Button.component(\n                {\n                    type: \"button\",\n                    className: \"Button Button--primary\",\n                    onclick: this.hide.bind(this),\n                },\n                app.translator.trans(\n                    \"malago-achievements.forum.new_achievement_close\"\n                )\n                )}\n                \n            </div>,\n            -10\n        );\n\n        return items;\n    }\n\n    // Hide the footer completely\n    footer() {\n        return null;\n    }\n\n    content(){\n        if (this.loading) {\n            return (\n                <div className=\"Modal-body\">\n                <div className=\"Form\">\n                    <div className=\"container\">\n                    <LoadingIndicator />\n                    </div>\n                </div>\n                </div>\n            );\n        }\n            \n        return (\n            <div className=\"Modal-body\">\n              <div className=\"Modal--New-Achievement\">{this.fields().toArray()}</div>\n            </div>\n          );\n    }\n\n    // Instead of hitting /register (which would change which user is connected in this session)\n    // We just hit the API that's already used behind the scenes when registering\n    // Doing it this way skips connecting the new account and just returns the new user data\n    // onsubmit(e) {\n    //     e.preventDefault();\n\n    //     this.loading = true;\n\n    //     app.request({\n    //         url: app.forum.attribute('apiUrl') + '/users',\n    //         method: 'POST',\n    //         body: {\n    //             data: {\n    //                 attributes: this.submitData(),\n    //             },\n    //         },\n    //         errorHandler: this.onerror.bind(this)\n    //     }).then(\n    //         payload => {\n    //             const user = app.store.pushPayload(payload);\n\n    //             // Add the missing groups relationship we can't include from the CreateUserController\n    //             // Without this there's an error trying to access the user edit modal just after the redirect to the profile\n    //             user.pushData({\n    //                 relationships: {\n    //                     groups: {\n    //                         data: [],\n    //                     },\n    //                 },\n    //             });\n\n    //             m.route.set(app.route.user(user));\n    //         },\n    //         this.loaded.bind(this)\n    //     );\n    // }\n}","/*\n *  Achievements Extension for Flarum\n *  Author: Miguel A. Lago\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\n\nconst { default: registerModels } = require(\"../common/registerModels\");\n\nimport { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Post from 'flarum/components/Post';\nimport PostUser from 'flarum/components/PostUser';\nimport ModalManager from 'flarum/components/ModalManager';\nimport Model from 'flarum/Model';\nimport User from 'flarum/models/User';\nimport TextEditor from 'flarum/components/TextEditor';\nimport PostEdited from 'flarum/components/PostEdited'\nimport Achievement from '../common/models/Achievement';\nimport Application from 'flarum/common/Application';\nimport NewAchievementModal from './modals/NewAchievementModal';\nimport IndexPage from 'flarum/components/IndexPage'\nimport Page from 'flarum/components/Page'\n\napp.initializers.add('malago-achievements', app => {\n  registerModels();\n  \n  extend(CommentPost.prototype, 'oncreate', function(x) {\n    var html=\"\";\n    var points=0;\n\n    if(!this.attrs.post.data.attributes.isHidden){\n      this.attrs.post.data.attributes.achievements.forEach(function(item, index){\n        var rectangle = item.rectangle.split(',');\n        var style=\"background:url(\"+item.image+\");\\\n        background-position:-\"+rectangle[0]+\"px -\"+rectangle[1]+\"px;\\\n        height:\"+rectangle[2]+\"px;\\\n        width:\"+rectangle[3]+\"px;\";\n        html+=\"<span class='Badge Achievement' style='\"+style+\"' data-toggle='tooltip' title='\"+item.name+\"'></span>\";\n        points+=item.points;\n      });\n      html+=\"<span class='Achievement--Points' data-toggle='tooltip' title='\"+app.translator.trans(\n        \"malago-achievements.forum.achievement_points\")+\"'>\"+points+\"</span>\";\n      $(this.element).append(html);\n      $(\".Achievement\").tooltip();\n      $(\".Achievement--Points\").tooltip();\n    }\n  });\n\n  extend(Application.prototype,'request', function(promise){\n    if(promise){\n      promise.then(function(data){\n        if(data.new_achievements !== undefined && data.new_achievements !== null && data.new_achievements.length>0)\n          app.modal.show(NewAchievementModal, { achievements: data.new_achievements });\n      });\n    }\n  });\n\n  extend(Page.prototype,'oncreate', function(promise){\n    if(app.session.user !== undefined){\n      setTimeout(function(){\n        var new_achievements=app.session.user.achievements();\n      \n        if(new_achievements !== undefined && new_achievements !== null && new_achievements.length>0){\n          var only_new_achievements=[];\n          for(var i = 0; i < new_achievements.length; i++){\n            if(new_achievements[i].data.attributes.new==1){\n              only_new_achievements.push(new_achievements[i].data.attributes)\n              new_achievements[i].save({new:0, user_id:app.session.user.data.id});\n            }\n          }\n          if(only_new_achievements.length>0)\n            app.modal.show(NewAchievementModal, { achievements: only_new_achievements });\n        }\n      },1000);    \n    }\n  }); \n\n});\n"],"sourceRoot":""}