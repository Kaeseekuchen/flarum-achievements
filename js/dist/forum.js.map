{"version":3,"sources":["webpack://@malago/flarum-achievements/webpack/bootstrap","webpack://@malago/flarum-achievements/external \"flarum.core.compat['Model']\"","webpack://@malago/flarum-achievements/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@malago/flarum-achievements/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@malago/flarum-achievements/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/Button']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['models/User']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['helpers/icon']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/Modal']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['utils/ItemList']\"","webpack://@malago/flarum-achievements/./src/common/models/Achievement.js","webpack://@malago/flarum-achievements/./src/common/models/AchievementUser.js","webpack://@malago/flarum-achievements/./src/common/registerModels.js","webpack://@malago/flarum-achievements/external \"flarum.core.compat['extend']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['utils/mixin']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['app']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/CommentPost']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['common/Application']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/Page']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/Post']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/PostUser']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/ModalManager']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/TextEditor']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/PostEdited']\"","webpack://@malago/flarum-achievements/external \"flarum.core.compat['components/IndexPage']\"","webpack://@malago/flarum-achievements/./src/forum/modals/NewAchievementModal.js","webpack://@malago/flarum-achievements/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","_extends","assign","target","arguments","length","source","apply","this","Achievement","Model","id","attribute","description","computation","points","rectangle","image","new","active","AchievementUser","registerModels","User","achievements","hasMany","achievement_user","app","store","models","achievement_id","user_id","NewAchievementModal","title","translator","trans","oninit","vnode","fields","items","ItemList","attrs","split","includes","style","add","className","class","icon","Button","component","type","onclick","hide","footer","content","loading","LoadingIndicator","toArray","Modal","require","initializers","extend","CommentPost","x","html","post","data","attributes","isHidden","forEach","item","index","$","element","find","after","tooltip","Application","promise","then","undefined","new_achievements","modal","show","Page","session","user","setTimeout","only_new_achievements","push","save"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","module.exports = flarum.core.compat['Model'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['utils/ItemList'];","/*\n *  Achievements Extension for Flarum\n *  Author: Miguel A. Lago\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\n\nimport Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Achievement extends Model {}\n \nObject.assign(Achievement.prototype, {\n  id: Model.attribute(\"id\"),\n  name: Model.attribute(\"name\"),\n  description: Model.attribute('description'),\n  computation: Model.attribute('computation'),\n  points: Model.attribute('points'),\n  rectangle: Model.attribute('rectangle'),\n  image: Model.attribute('image'),\n  new: Model.attribute('new'),\n  active: Model.attribute('active')\n});","/*\n *  Achievements Extension for Flarum\n *  Author: Miguel A. Lago\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\n\nimport Model from 'flarum/Model';\n\nexport default class AchievementUser extends Model {}\n\nObject.assign(AchievementUser.prototype, {\n  achievement_id: Model.attribute(\"achievement_id\"),\n  user_id: Model.attribute('user_id'),\n  new: Model.attribute('new')\n});","/*\n *  Achievements Extension for Flarum\n *  Author: Miguel A. Lago\n *\n *  This program is free software: you can redistribute it and/or modify\n *  it under the terms of the GNU General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  This program is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU General Public License for more details.\n */\n\nimport Model from \"flarum/Model\";\nimport User from \"flarum/models/User\";\nimport Achievement from \"./models/Achievement\";\nimport AchievementUser from \"./models/AchievementUser\";\n\nexport default function registerModels() {\n  User.prototype.achievements = Model.hasMany('achievements','achievement_user');\n  User.prototype.achievement_user = Model.hasMany('achievement_user');\n\n  app.store.models.achievements = Achievement;\n  app.store.models.achievement_user = AchievementUser;\n}","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['common/Application'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['components/PostUser'];","module.exports = flarum.core.compat['components/ModalManager'];","module.exports = flarum.core.compat['components/TextEditor'];","module.exports = flarum.core.compat['components/PostEdited'];","module.exports = flarum.core.compat['components/IndexPage'];","/*\r\n *  Achievements Extension for Flarum\r\n *  Author: Miguel A. Lago\r\n *\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n *\r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n */\r\n\r\nimport app from 'flarum/app';\r\nimport icon from \"flarum/helpers/icon\";\r\nimport Modal from 'flarum/components/Modal';\r\nimport ItemList from \"flarum/utils/ItemList\";\r\nimport Button from \"flarum/components/Button\";\r\n\r\nexport default class NewAchievementModal extends Modal {\r\n\r\n\r\n    title() {\r\n        return app.translator.trans('malago-achievements.forum.new_achievement_title');\r\n    }\r\n\r\n    oninit(vnode) {\r\n        super.oninit(vnode);\r\n    }\r\n\r\n    fields() {\r\n        const items = new ItemList();\r\n        for (var i = 0; i < this.attrs.achievements.length; i++) {\r\n            var rectangle = this.attrs.achievements[i].rectangle.split(',');\r\n\r\n            if (this.attrs.achievements[i].image.includes(\"http\")) {\r\n                var style = \"background:url(\" + this.attrs.achievements[i].image + \");\\\r\n                    background-position:-\"+ rectangle[0] + \"px -\" + rectangle[1] + \"px;\\\r\n                    height:\"+ rectangle[2] + \"px;\\\r\n                    width:\"+ rectangle[3] + \"px;\";\r\n\r\n                items.add(\r\n                    \"image\" + i,\r\n                    <div className=\"Form-group\">\r\n                        <span class='Badge Achievement' style={style}></span>\r\n                    </div>,\r\n                    -10\r\n                );\r\n            } else {\r\n                items.add(\r\n                    \"image\" + i,\r\n                    <div className=\"Form-group\">\r\n                        <span class='Badge Achievement--Icon'>{icon(this.attrs.achievements[i].image)}</span>\r\n                    </div>,\r\n                    -10\r\n                );\r\n            }\r\n\r\n            items.add(\r\n                \"name\" + i,\r\n                <div className=\"Form-group\">\r\n                    <h1>{this.attrs.achievements[i].name}</h1>\r\n                </div>,\r\n                -10\r\n            );\r\n\r\n            items.add(\r\n                \"description\" + i,\r\n                <div className=\"Form-group\">\r\n                    <h3>{this.attrs.achievements[i].description}</h3>\r\n                </div>,\r\n                -10\r\n            );\r\n        }\r\n\r\n        items.add(\r\n            \"close\",\r\n            <div className=\"NewAchievementModal--Button\">\r\n                {Button.component(\r\n                    {\r\n                        type: \"button\",\r\n                        className: \"Button Button--primary\",\r\n                        onclick: this.hide.bind(this),\r\n                    },\r\n                    app.translator.trans(\r\n                        \"malago-achievements.forum.new_achievement_close\"\r\n                    )\r\n                )}\r\n\r\n            </div>,\r\n            -10\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    // Hide the footer completely\r\n    footer() {\r\n        return null;\r\n    }\r\n\r\n    content() {\r\n        if (this.loading) {\r\n            return (\r\n                <div className=\"Modal-body\">\r\n                    <div className=\"Form\">\r\n                        <div className=\"container\">\r\n                            <LoadingIndicator />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"Modal-body\">\r\n                <div className=\"Modal--New-Achievement\">{this.fields().toArray()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Instead of hitting /register (which would change which user is connected in this session)\r\n    // We just hit the API that's already used behind the scenes when registering\r\n    // Doing it this way skips connecting the new account and just returns the new user data\r\n    // onsubmit(e) {\r\n    //     e.preventDefault();\r\n\r\n    //     this.loading = true;\r\n\r\n    //     app.request({\r\n    //         url: app.forum.attribute('apiUrl') + '/users',\r\n    //         method: 'POST',\r\n    //         body: {\r\n    //             data: {\r\n    //                 attributes: this.submitData(),\r\n    //             },\r\n    //         },\r\n    //         errorHandler: this.onerror.bind(this)\r\n    //     }).then(\r\n    //         payload => {\r\n    //             const user = app.store.pushPayload(payload);\r\n\r\n    //             // Add the missing groups relationship we can't include from the CreateUserController\r\n    //             // Without this there's an error trying to access the user edit modal just after the redirect to the profile\r\n    //             user.pushData({\r\n    //                 relationships: {\r\n    //                     groups: {\r\n    //                         data: [],\r\n    //                     },\r\n    //                 },\r\n    //             });\r\n\r\n    //             m.route.set(app.route.user(user));\r\n    //         },\r\n    //         this.loaded.bind(this)\r\n    //     );\r\n    // }\r\n}","/*\r\n *  Achievements Extension for Flarum\r\n *  Author: Miguel A. Lago\r\n *\r\n *  This program is free software: you can redistribute it and/or modify\r\n *  it under the terms of the GNU General Public License as published by\r\n *  the Free Software Foundation, either version 3 of the License, or\r\n *  (at your option) any later version.\r\n *\r\n *  This program is distributed in the hope that it will be useful,\r\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n *  GNU General Public License for more details.\r\n */\r\n\r\nconst { default: registerModels } = require(\"../common/registerModels\");\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\nimport Post from 'flarum/components/Post';\r\nimport PostUser from 'flarum/components/PostUser';\r\nimport ModalManager from 'flarum/components/ModalManager';\r\nimport Model from 'flarum/Model';\r\nimport User from 'flarum/models/User';\r\nimport TextEditor from 'flarum/components/TextEditor';\r\nimport PostEdited from 'flarum/components/PostEdited'\r\nimport Achievement from '../common/models/Achievement';\r\nimport Application from 'flarum/common/Application';\r\nimport NewAchievementModal from './modals/NewAchievementModal';\r\nimport icon from \"flarum/helpers/icon\";\r\nimport IndexPage from 'flarum/components/IndexPage'\r\nimport Page from 'flarum/components/Page'\r\n\r\napp.initializers.add('malago-achievements', app => {\r\n  registerModels();\r\n\r\n  extend(CommentPost.prototype, 'oncreate', function (x) {\r\n    var html = \"\";\r\n    var points = 0;\r\n\r\n    if (!this.attrs.post.data.attributes.isHidden) {\r\n      this.attrs.post.data.attributes.achievements.forEach(function (item, index) {\r\n\r\n        var rectangle = item.rectangle.split(',');\r\n        if (item.image.includes(\"http\")) {\r\n          var style = \"background:url(\" + item.image + \");\\\r\n            background-position:-\"+ rectangle[0] + \"px -\" + rectangle[1] + \"px;\\\r\n            height:\"+ rectangle[2] + \"px;\\\r\n            width:\"+ rectangle[3] + \"px;\\\r\n            margin: -\"+ (rectangle[3] / 4 - 4) + \"px;\";\r\n          html += \"<span class='Badge Achievement' style='\" + style + \"' data-toggle='tooltip' title='\" + item.name + \"'></span>\";\r\n        } else {\r\n          html += \"<span class='Badge Achievement--Icon' data-toggle='tooltip' title='\" + item.name + \"'><i class='icon \" + item.image + \"'></i></span>\";\r\n        }\r\n\r\n        points += item.points;\r\n      });\r\n      if (html !== \"\") {\r\n        if (points > 0) {\r\n          html += \"<span class='Achievement--Points' data-toggle='tooltip' title='\" + app.translator.trans(\r\n            \"malago-achievements.forum.achievement_points\") + \"'>\" + app.translator.trans(\r\n              \"malago-achievements.forum.achievement_points\") + \": <span class='Achievement--Points--Number'>\" + points + \"</span></span>\";\r\n        }\r\n        $(this.element).find(\".Post-body\").after(\"<div class='Achievements--User'>\" + html + \"</div>\");\r\n        $(\".Achievement--Icon\").tooltip();\r\n        $(\".Achievement\").tooltip();\r\n        $(\".Achievement--Points\").tooltip();\r\n      }\r\n    }\r\n  });\r\n\r\n  extend(Application.prototype, 'request', function (promise) {\r\n    if (promise) {\r\n      promise.then(function (data) {\r\n        if (data && data.new_achievements !== undefined && data.new_achievements !== null && data.new_achievements.length > 0)\r\n          app.modal.show(NewAchievementModal, { achievements: data.new_achievements });\r\n      });\r\n    }\r\n  });\r\n\r\n  extend(Page.prototype, 'oncreate', function (promise) {\r\n    if (app.session.user !== undefined) {\r\n      setTimeout(function () {\r\n        var new_achievements = app.session.user.achievements();\r\n\r\n        if (new_achievements !== undefined && new_achievements !== null && new_achievements.length > 0) {\r\n          var only_new_achievements = [];\r\n          for (var i = 0; i < new_achievements.length; i++) {\r\n            if (new_achievements[i].data.attributes.new == 1) {\r\n              only_new_achievements.push(new_achievements[i].data.attributes)\r\n              new_achievements[i].save({ new: 0, user_id: app.session.user.data.id });\r\n            }\r\n          }\r\n          if (only_new_achievements.length > 0)\r\n            app.modal.show(NewAchievementModal, { achievements: only_new_achievements });\r\n        }\r\n      }, 1000);\r\n    }\r\n  });\r\n\r\n});\r\n"],"sourceRoot":""}